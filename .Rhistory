?seq
?c
x = c(1,2,3)
x
x[1:3]
z = matrix(seq(1,12),4,3)
z
x = runif(50)
y = rnorm(50)
plot(x,y)
search(0)
search()
?plot
clear
help()
shiny::runApp('Downloads')
shiny::runApp('Downloads')
shiny::runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
getwd()
shiny::runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
shiny::runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
environment(validate)
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
?gg_err
gg_error.rfsrc
?gg_error
environment(left_join)
library(dplyr)
environment(left_join)
install.packages(c("checkpoint", "nlme", "survival"))
chooseCRANmirror()
update.packages()
install.packages("dplyr")
install.packages("dplyr")
shiny::runApp('Downloads')
runApp('Downloads')
shiny::runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
?selectInput
runApp('Downloads')
runApp('Downloads')
shiny::runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
?distinct
?data.frame
runApp('Downloads')
pwr.r.test(n = 6, r = 0.5, sig.level = 0.05)
?pwr.r.test
??pwr.r.test
?pwr.r
??pwr.r
?pwr
??pwr
install.packages("pwr")
library(pwr)
?pwr.r.test
pwr.r.test(n = 6, r = 0.5, sig.level = 0.05)
pwr.t2n.test(n1 = 33, n2 = 33, sig.level = 0.05)
pwr.t2n.test(n1 = 33, n2 = 33, d=0.8, sig.level = 0.05)
pwr.t2n.test(n1 = 33, n2 = 67, d=0.8, sig.level = 0.05)
pwr.t2n.test(n1 = 11, n2 = 22, d=0.8, sig.level = 0.05)
pwr.t2n.test(n1 = 15, n2 = 15, d=0.8, sig.level = 0.05)
pwr.t.test(d=0.8, sig.level = 0.05, power = 0.8)
?pwr.t.test
ls
UIColor(red:0.36, green:0.90, blue:0.79, alpha:1.0)
getOption("repos")
q()
getOption("repos")
getOption("repos")
q()
shiny::runApp('Desktop/Attrition-Web-App/Attrition-Analytics')
runApp('Desktop/DataFest')
runApp('Desktop/DataFest')
